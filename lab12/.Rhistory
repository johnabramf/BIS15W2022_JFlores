knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
files
files <- list.files(path = "data/spiders", pattern = ".csv")
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
files
spider_list[[3]]
class(spider_list[[3]])
class(spider_list[[3]])
spider_list[[3]]
class(spider_list[[3]])
spider_list[[3]]
class(spider_list[[3]])
View(spider_list)
spider_list[[4]]
spider_list[[str(hayward)]]
glimpse(spider_list)
str(spider_list)
names(spider_list)
names(spider_list[[3]])
names(spider_list[[6]])
names <- list.files(path = "data/spiders", pattern = ".csv")
names
names <- list.files(path = "data/spiders", pattern = ".csv")
## Naming List Elements
We don't need to here, but for demonstration purposes we can name the elements in our list. We will first get the names of each file, but we only want the county part. We will use `strsplit()` for that, which creates a nested list of strings. We want to keep the first element of each list element. Because there is only one element in each nested list element, we can use `unlist()`.
```{r}
names <- list.files(path = "data/spiders", pattern = ".csv")
names
```
names
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
names(spider_list)
spider_list
spider_list[["Butte Coutny"]]
spider_list[["Butte County"]]
spider_list[[Butte County]]
spider_list[[Butte County]]
spider_list$Butte
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_B <- read_csv(here("lab12", "data", "table_B.csv"))
names(table_A)
names(table_B)
names(table_B)
join_type(firstTable, secondTable, by=columnTojoinOn)
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
View(table_A)
View(table_B)
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
full_join(spiders_locs, spiders_all, by="Accession")
spiders_with_locs<- left_join(spiders_locs, spiders_all, by="Accession")
spiders_with_locs
class(spiders_with_locs$Date)
day <- today()
str(day)
datetime <- now()
datetime
datetime <- now()
datetime
datetime <- now()
datetime
day <- today()
str(day)
dmy(spiders_with_locs$Date)
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
