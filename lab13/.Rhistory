),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(!ethnicity=="All") %>%
filter(campus==input$campus & academic_yr==input$academic_yr & category==input$category) %>%
ggplot(aes_string(x="ethnicity", y="perc_fr", fill="ethnicity")) +geom_col() +ylim(0,1) +theme_linedraw() +labs(x="Ethnicity", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="black"
dashboardHeader(),
library(shiny)
ui <- dashboardPage(skin="black",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
sliderInput("academic_yr", "Select Year of Admissions", min=2010, max=2019, value=2019, step=1),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(!ethnicity=="All") %>%
filter(campus==input$campus & academic_yr==input$academic_yr & category==input$category) %>%
ggplot(aes_string(x="ethnicity", y="perc_fr", fill="ethnicity")) +geom_col() +ylim(0,1) +theme_linedraw() +labs(x="Ethnicity", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
sliderInput("academic_yr", "Select Year of Admissions", min=2010, max=2019, value=2019, step=1),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(!ethnicity=="All") %>%
filter(campus==input$campus & academic_yr==input$academic_yr & category==input$category) %>%
ggplot(aes_string(x="ethnicity", y="perc_fr", fill="ethnicity")) +geom_col() +ylim(0,1) +theme_linedraw() +labs(x="Ethnicity", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit %>%
count(ethnicity)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Etnicity", choices=c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="All"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="All"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="year", y="perc_fr", fill="year")) +geom_col() +ylim(0,1) +theme_linedraw() +labs(x="Year", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="All"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr", fill="academic_yr")) +geom_col() +ylim(0,1) +theme_linedraw() +labs(x="Year", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="All"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr", fill="academic_yr")) +geom_col() +ylim(0,1) +labs(x="Year", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
glimpse(UC_admit) #2160 rows, 6 columns, 2160x6
naniar::miss_var_summary(UC_admit)
UC_admit$perc_fr <- as.numeric(sub("%", "", UC_admit$perc_fr,fixed=TRUE))/100
UC_admit$academic_yr <-as.factor(UC_admit$academic_yr)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
sliderInput("academic_yr", "Select Year of Admissions", min=2010, max=2019, value=2019, step=1),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(!ethnicity=="All") %>%
filter(campus==input$campus & academic_yr==input$academic_yr & category==input$category) %>%
ggplot(aes_string(x="ethnicity", y="perc_fr", fill="ethnicity")) +geom_col() +ylim(0,1) +theme_linedraw() +labs(x="Ethnicity", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit$academic_yr <-as.numeric(UC_admit$academic_yr)
UC_admit$academic_yr <-as.numeric(UC_admit$academic_yr)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
sliderInput("academic_yr", "Select Year of Admissions", min=2010, max=2019, value=2019, step=1),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(!ethnicity=="All") %>%
filter(campus==input$campus & academic_yr==input$academic_yr & category==input$category) %>%
ggplot(aes_string(x="ethnicity", y="perc_fr", fill="ethnicity")) +geom_col() +ylim(0,1) +theme_linedraw() +labs(x="Ethnicity", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
glimpse(UC_admit) #2160 rows, 6 columns, 2160x6
naniar::miss_var_summary(UC_admit)
UC_admit$perc_fr <- as.numeric(sub("%", "", UC_admit$perc_fr,fixed=TRUE))/100
UC_admit %>%
count(academic_yr)
UC_admit <- readr::read_csv("data/UC_admit.csv") %>% clean_names()
glimpse(UC_admit) #2160 rows, 6 columns, 2160x6
naniar::miss_var_summary(UC_admit)
UC_admit$perc_fr <- as.numeric(sub("%", "", UC_admit$perc_fr,fixed=TRUE))/100
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
sliderInput("academic_yr", "Select Year of Admissions", min=2010, max=2019, value=2019, step=1),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(!ethnicity=="All") %>%
filter(campus==input$campus & academic_yr==input$academic_yr & category==input$category) %>%
ggplot(aes_string(x="ethnicity", y="perc_fr", fill="ethnicity")) +geom_col() +ylim(0,1) +theme_linedraw() +labs(x="Ethnicity", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="All"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr", fill="academic_yr")) +geom_col() +ylim(0,1) +labs(x="Year", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="All"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr", fill="academic_yr")) +geom_col() +ylim(0,1) +labs(x="Year", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip() +scale_y_continuous(breaks = waiver())
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="All"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr", fill="academic_yr")) +geom_col() +ylim(0,1) +labs(x="Year", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip() +scale_x_continuous(limits=c(2010, 2019), breaks = c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="All"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +geom_col() +ylim(0,1) +labs(x="Year", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip() +scale_x_continuous(limits=c(2010, 2019), breaks = c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="All"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +geom_col() +ylim(0,1) +labs(x="Year", y="Percent", title="Admissions Stats for each year (2010-2019) by Ethnicity, Category of Applicants, and Campus") +coord_flip() +scale_x_continuous(limits=c(2010, 2019), breaks = c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="American Indian"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +geom_col() +ylim(0,1) +labs(x="Year", y="Percent", title="Admissions Stats for each year (2010-2019) by Ethnicity, Category of Applicants, and Campus") +coord_flip() +scale_x_continuous(limits=c(2010, 2019), breaks = c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="American Indian"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +geom_col() +ylim(0,1) +labs(x="Year", y="Percent", title="Admissions Stats for each year (2010-2019) by Ethnicity, Category of Applicants, and Campus") +coord_flip() +scale_x_continuous(limits=c(2010, 2019), breaks = c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019)) +theme_linedraw()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="American Indian"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr", color="yellow")) +geom_col() +ylim(0,1) +labs(x="Year", y="Percent", title="Admissions Stats for each year (2010-2019) by Ethnicity, Category of Applicants, and Campus") +coord_flip() +scale_x_continuous(limits=c(2010, 2019), breaks = c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019)) +theme_linedraw()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="American Indian"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +geom_col(color="yellow") +ylim(0,1) +labs(x="Year", y="Percent", title="Admissions Stats for each year (2010-2019) by Ethnicity, Category of Applicants, and Campus") +coord_flip() +scale_x_continuous(limits=c(2010, 2019), breaks = c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019)) +theme_linedraw()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="American Indian"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +geom_col(fill="yellow", color="black") +ylim(0,1) +labs(x="Year", y="Percent", title="Admissions Stats for each year (2010-2019) by Ethnicity, Category of Applicants, and Campus") +coord_flip() +scale_x_continuous(limits=c(2010, 2019), breaks = c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019)) +theme_linedraw()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="American Indian"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +geom_col(fill="blue", alpha="0.4", color="black") +ylim(0,1) +labs(x="Year", y="Percent", title="Admissions Stats for each year (2010-2019) by Ethnicity, Category of Applicants, and Campus") +coord_flip() +scale_x_continuous(limits=c(2010, 2019), breaks = c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019)) +theme_linedraw()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
selectInput("ethnicity", "Select Ethnicity", choices=c("African American", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"), selected="American Indian"),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(ethnicity==input$ethnicity) %>%
filter(campus==input$campus & category==input$category) %>%
ggplot(aes_string(x="academic_yr", y="perc_fr")) +geom_col(fill="blue", alpha=0.4, color="black") +ylim(0,1) +labs(x="Year", y="Percent", title="Admissions Stats for each year (2010-2019) by Ethnicity, Category of Applicants, and Campus") +coord_flip() +scale_x_continuous(limits=c(2010, 2019), breaks = c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019)) +theme_linedraw()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(skin="yellow",
dashboardHeader(),
dashboardSidebar(disable=T),
dashboardBody(box(width=3,
selectInput("campus", "Select UC Campus", choices=c("Davis", "Berkeley", "Santa_Barbara", "San_Diego", "Merced", "Irvine", "Los_Angeles", "Riverside", "Santa_Cruz"), selected="Davis"),
sliderInput("academic_yr", "Select Year of Admissions", min=2010, max=2019, value=2019, step=1),
radioButtons("category", "Select Category of Applicants", choices=c("Enrollees", "Applicants", "Admits"))
),
plotOutput("plot", width="600px", height="500px")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(!ethnicity=="All") %>%
filter(campus==input$campus & academic_yr==input$academic_yr & category==input$category) %>%
ggplot(aes_string(x="ethnicity", y="perc_fr", fill="ethnicity")) +geom_col() +ylim(0,1) +theme_linedraw() +labs(x="Ethnicity", y="Percent", title="Ethnicity of students by campus, category of student, and year") +coord_flip()
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
