library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
clean_names(superhero_info)
clean_names(superhero_info)
glimpse(superhero_info)
skimr::skim(superhero_info)
glimpse(superhero_info)
skimr::skim(superhero_info)
superhero_info <- clean_names(superhero_info)
superhero_info %>%
ggplot(aes(x=alignment, y=weight)) +geom_boxplot()
superhero_info %>%
ggplot(aes(x=alignment, y=weight, na.rm=T)) +geom_boxplot()
superhero_info %>%
filter(aligntment!=NA)
superhero_info %>%
filter(aligntment!=is.na(.)
ggplot(aes(x=alignment, y=weight)) +geom_boxplot()
superhero_info %>%
filter(aligntment!=is.na(.))
superhero_info %>%
filter(alignment!=is.na(.))
superhero_info %>%
filter(alignment!=is.na())
superhero_info %>%
filter(alignment!=is.na(.))
superhero_info %>%
filter(!is.na(alignment))
ggplot(aes(x=alignment, y=weight)) +geom_boxplot()
superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x=alignment, y=weight)) +geom_boxplot()
superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x=alignment, y=weight)) +geom_boxplot() +theme_linedraw()
superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x=alignment, y=weight, fill=alignment)) +geom_boxplot() +theme_linedraw()
superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x=alignment, y=weight, fill=alignment)) +geom_boxplot(alpha=0.5) +theme_linedraw()
superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x=alignment, y=weight, fill=alignment)) +geom_boxplot(alpha=0.5)
superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x=alignment, y=weight, fill=alignment)) +geom_boxplot(alpha=0.5) +geom_violin(alpha=0.5)
superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x=alignment, y=weight, fill=alignment)) +geom_violin(alpha=0.5)
superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x=alignment, y=weight, fill=alignment)) +geom_boxplot(alpha=0.5) +geom_violin(alpha=0.5)
glimpse(superhero_info)
skimr::skim(superhero_info)
superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x=alignment, y=weight, fill=alignment)) +geom_boxplot(alpha=0.5) +geom_violin(alpha=0.5) +labs(plot.title="Distribution of superhero/villian weight by alignment")
superhero_info %>%
filter(!is.na(alignment)) %>%
ggplot(aes(x=alignment, y=weight, fill=alignment)) +geom_boxplot(alpha=0.5) +geom_violin(alpha=0.5) +labs(title="Distribution of superhero/villian weight by alignment")
superhero_info %>%
filter(!is.na(height) & !is.na(publisher)) %>%
ggplot(aes(x=, y=weight, fill=publisher)) +geom_boxplot(alpha=0.5) +geom_violin(alpha=0.5) +labs(title="Distribution of superhero/villian height by publisher")
superhero_info %>%
filter(!is.na(height) & !is.na(publisher)) %>%
ggplot(aes(x=publisher, y=weight, fill=publisher)) +geom_boxplot(alpha=0.5) +geom_violin(alpha=0.5) +labs(title="Distribution of superhero/villian height by publisher")
superhero_info %>%
filter(!is.na(height) & !is.na(publisher)) %>%
ggplot(aes(x=publisher, y=weight, fill=publisher)) +geom_boxplot(alpha=0.5) +geom_violin(alpha=0.5) +labs(title="Distribution of superhero/villian height by publisher") +coord_flip()
glimpse(superhero_info)
skimr::skim(superhero_info)
superhero_info %>%
filter(!is.na(height) & !is.na(hair_color)) %>%
ggplot(aes(x=hair_color, y=height, fill=hair_color)) +geom_boxplot(alpha=0.5) +geom_violin(alpha=0.5) +labs(title="Distribution of superhero/villian height by hair color") +coord_flip()
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
glimpse(beachbugs)
skim(beachbugs)
library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
glimpse(beachbugs)
glimpse(beachbugs_long)
beachbugs_long %>%
ggplot(aes(x=site, y=buglevels)) +geom_tile() +scale_fill_gradient(low="green", high="red")
beachbugs_long %>%
ggplot(aes(x=year, y=site, fill=buglevels)) +geom_tile() +scale_fill_gradient(low="green", high="red")
#makes a new column of the highest buglevel observed at each site
beachbugs_w_max <- beachbugs_long %>%
group_by(site) %>%
mutate(max_buglevel = max(buglevels, na.rm=T)) %>%
arrange(site)
beachbugs_w_max
#makes a new table where the buglevels are normalized to the max_buglevel
beachbugs_normalized <- beachbugs_w_max %>%
group_by(site) %>%
mutate(norm_buglevel = buglevels/max_buglevel) %>%
arrange(site,year) %>%
select(site, year, norm_buglevel)   # you dont have to select(), but I think its a clearer looking table
beachbugs_normalized
View(beachbugs_normalized)
beachbugs_normalized %>%
ggplot(x=year, y=site, fill=norm_buglevels)
beachbugs_normalized %>%
ggplot(x=year, y=site, fill=norm_buglevels) +geom_tile() +scale_fill_gradient(low="green", high="red")
beachbugs_normalized %>%
ggplot(aes(x=year, y=site, fill=norm_buglevels)) +geom_tile() +scale_fill_gradient(low="green", high="red")
View(beachbugs_normalized)
beachbugs_normalized %>%
ggplot(aes(x=year, y=site, fill=norm_buglevel)) +geom_tile() +scale_fill_gradient(low="green", high="red")
View(superhero_info)
# evil
evil_vec <- superhero_info %>%
filter(alignment=="bad") %>%
pull(name)
# evil
evil_vec <- superhero_info %>%
filter(alignment=="bad") %>%
pull(name)
# evil
evil_vec <- superhero_info %>%
filter(Alignment=="bad") %>%
pull(name)
# red eyes
redeye_vec <- superhero_info %>%
filter(`Eye color`=="red") %>%
pull(name)
# male
# bald
# evil
evil_vec <- superhero_info %>%
filter(Alignment=="bad") %>%
pull(name)
# red eyes
redeye_vec <- superhero_info %>%
filter(`Eye color`=="red") %>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender=="Male") %>%
pull(name)
# evil
evil_vec <- superhero_info %>%
filter(Alignment=="bad") %>%
pull(name)
# red eyes
redeye_vec <- superhero_info %>%
filter(`Eye color`=="red") %>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(Gender=="Male") %>%
pull(name)
# bald
# evil
evil_vec <- superhero_info %>%
filter(Alignment=="bad") %>%
pull(name)
# red eyes
redeye_vec <- superhero_info %>%
filter(`Eye color`=="red") %>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(Gender=="Male") %>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(`Hair color`=="No Hair") %>%
pull(name)
questions_list <- list(evil_vec, redeye_vec, male_vec, bald_vec)
superhero_info
ggVennDiagram(questions_list, category.names = c("name", "name", "name", "name"))
superhero_info %>%
ggVennDiagram(questions_list, category.names = c("name", "name", "name", "name"))
View(questions_list)
superhero_info %>%
ggVennDiagram(questions_list, category.names = c("Bald", "Evil", "Male", "Red Eyes"))
View(questions_list)
ggVennDiagram(questions_list, category.names = c("Bald", "Evil", "Male", "Red Eyes"))
ggVennDiagram(questions_list, category.names = c("Bald", "Evil", "Male", "Red Eyes"))
superhero_info %>%
filter(`Eye color`=="Red" & Gender=!"Male" & Alignment=="bad" & `Hair color`=="None")
superhero_info %>%
filter(`Eye color`=="Red" & Gender!="Male" & Alignment=="bad" & `Hair color`=="None")
View(superhero_info)
superhero_info %>%
filter(`Eye color`=="red" & Gender!="Male" & Alignment=="bad" & `Hair color`=="None")
superhero_info %>%
filter(`Eye color`=="red" & Gender!="Male" & Alignment=="bad" & `Hair color`=="No hair")
superhero_info %>%
filter(`Eye color`=="red" & Gender!="Male" & Alignment=="bad" & `Hair color`=="No Hair")
superhero_info %>%
filter(`Eye color`=="red" & Gender!="Male") %>%
superhero_info %>%
filter(`Eye color`=="red" & Gender!="Male")
superhero_info %>%
filter(`Eye color`=="red" & Gender!="Male") %>%
filter(Alignment!="bad")
superhero_info %>%
filter(`Eye color`=="red" & `Hair color`=="No Hair") %>%
filter(Alignment!="bad")
superhero_info %>%
filter(Alignment=="bad" & `Hair color`=="No Hair")
superhero_info %>%
filter(Alignment=="bad" & Gender=="Male")
superhero_info %>%
filter(Gender=="Male")
superhero_info %>%
filter(Gender=="Male" & Alignment=="bad" & `Eye color`!="Red" & `Hair color`!="No Hair")
# evil
evil_vec <- superhero_info %>%
filter(Alignment=="bad") %>%
pull(name)
# red eyes
redeye_vec <- superhero_info %>%
filter(`Eye color`=="red") %>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(Gender=="Male") %>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(`Hair color`=="No Hair") %>%
pull(name)
questions_list <- list(evil_vec, redeye_vec, male_vec, bald_vec)
ggVennDiagram(questions_list, category.names = c("Bald", "Evil", "Male", "Red Eyes"))
superhero_info %>%
filter(Gender!="Male" & Alignment=="bad" & `Eye color`!="Red" & `Hair color`!="No Hair")
ggVennDiagram(questions_list, category.names = c("Evil", "Red Eyes", "Male", "Bald")))
ggVennDiagram(questions_list, category.names = c("Evil", "Red Eyes", "Male", "Bald"))
superhero_info %>%
filter(Gender!="Male" & Alignment=="bad" & `Eye color`=="Red" & `Hair color`!="No Hair")
superhero_info %>%
filter(Gender!="Male" & Alignment=="bad" & `Eye color`=="red" & `Hair color`!="No Hair")
# Tall?
very_tall_vec <- superhero_info %>%
filter(Height>=200) %>%
pull(name)
good_vec <- superhero_info %>%
filter(Alignment=="good") %>%
pull(name)
# Tall?
very_tall_vec <- superhero_info %>%
filter(Height>=200) %>%
pull(name)
#Good?
good_vec <- superhero_info %>%
filter(Alignment=="good") %>%
pull(name)
Bruh_vec <- list(very_tall_vec, good_vec)
ggVennDiagram(Bruh_vec, category.names=c("Very tall", "Good"))
# Tall?
very_tall_vec <- superhero_info %>%
filter(Height>=200) %>%
pull(name)
has_hair_vec <- superhero_info %>%
filter(`Hair color`!="No Hair") %>%
pull(name)
#Good?
good_vec <- superhero_info %>%
filter(Alignment=="good") %>%
pull(name)
Bruh_vec <- list(very_tall_vec, good_vec, )
# Tall?
very_tall_vec <- superhero_info %>%
filter(Height>=200) %>%
pull(name)
has_hair_vec <- superhero_info %>%
filter(`Hair color`!="No Hair") %>%
pull(name)
#Good?
good_vec <- superhero_info %>%
filter(Alignment=="good") %>%
pull(name)
Bruh_vec <- list(very_tall_vec, has_hair_vec, good_vec)
ggVennDiagram(Bruh_vec, category.names=c("Very tall", "Has Hair", "Good"))
head(superhero_powers)
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_frequency %>%
ggplot(aes(
label = power,
size = n,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = n,
color = power
)) +geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
power_frequency %>%
ggplot(aes(
label = power,
size = n,
color = power
)) +geom_text_wordcloud() +
scale_size_area(max_size = 20)
power_frequency %>%
ggplot(aes(
label = power,
size = n,
color = power
)) +geom_text_wordcloud()
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +geom_text_wordcloud()
power_frequency %>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +geom_text_wordcloud() +theme_minimal()
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_frequency %>%
ggplot(aes(
label = hero_names,
size = sum_powers,
color = hero_names
)) +geom_text_wordcloud() +theme_minimal()
power_quantity %>%
ggplot(aes(
label = hero_names,
size = sum_powers,
color = hero_names
)) +geom_text_wordcloud() +theme_minimal()
